In file included from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/Estimator.cpp:1[m[K:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:8:10:[m[K [01;31m[Kfatal error: [m[Kvisualization_msgs/Marker.h: No such file or directory
    8 | #include [01;31m[K<visualization_msgs/Marker.h>[m[K
      |          [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
compilation terminated.
make[2]: *** [CMakeFiles/PoseEstimation.dir/build.make:76: CMakeFiles/PoseEstimation.dir/src/lio/Estimator.cpp.o] Error 1
make[2]: *** Waiting for unfinished jobs....
In file included from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/PoseEstimation.cpp:1[m[K:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:8:10:[m[K [01;31m[Kfatal error: [m[Kvisualization_msgs/Marker.h: No such file or directory
    8 | #include [01;31m[K<visualization_msgs/Marker.h>[m[K
      |          [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
compilation terminated.
make[2]: *** [CMakeFiles/PoseEstimation.dir/build.make:63: CMakeFiles/PoseEstimation.dir/src/lio/PoseEstimation.cpp.o] Error 1
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/segment/segment.cpp:[m[K In member function â€˜[01m[Kint PCSeg::EncodeFeatures(float*)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/segment/segment.cpp:281:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
  281 | [01;35m[K}[m[K
      | [01;35m[K^[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:[m[K In member function â€˜[01m[Kvoid LidarFeatureExtractor::detectFeaturePoint(pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, std::vector<int>&, std::vector<int>&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:119:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  119 |     if (!pcl_isfinite(point.x[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:119:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  119 |     if (!pcl_isfinite(point.x[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:120:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  120 |         !pcl_isfinite(point.y[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:120:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  120 |         !pcl_isfinite(point.y[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:121:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  121 |         !pcl_isfinite(point.z[01;35m[K)[m[K) {
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:121:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  121 |         !pcl_isfinite(point.z[01;35m[K)[m[K) {
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:[m[K In member function â€˜[01m[Kvoid LidarFeatureExtractor::FeatureExtract_with_segment(const CustomMsgConstPtr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, sensor_msgs::PointCloud2&, int)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:624:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  624 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:624:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  624 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:625:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  625 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:625:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  625 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:626:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  626 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:626:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  626 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:[m[K In member function â€˜[01m[Kvoid LidarFeatureExtractor::FeatureExtract_with_segment_hap(const CustomMsgConstPtr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, sensor_msgs::PointCloud2&, int)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:738:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  738 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:738:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  738 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:739:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  739 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:739:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  739 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:740:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  740 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:740:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  740 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:[m[K In member function â€˜[01m[Kvoid LidarFeatureExtractor::detectFeaturePoint3(pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, std::vector<int>&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:965:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  965 |     if (!pcl_isfinite(point.x[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:965:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  965 |     if (!pcl_isfinite(point.x[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:966:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  966 |         !pcl_isfinite(point.y[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:966:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  966 |         !pcl_isfinite(point.y[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:967:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  967 |         !pcl_isfinite(point.z[01;35m[K)[m[K) {
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:967:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  967 |         !pcl_isfinite(point.z[01;35m[K)[m[K) {
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:[m[K In member function â€˜[01m[Kvoid LidarFeatureExtractor::FeatureExtract_hap(const CustomMsgConstPtr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, int)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1290:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1290 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1290:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1290 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1291:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1291 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1291:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1291 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1292:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1292 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1292:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1292 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
make[1]: *** [CMakeFiles/Makefile2:243: CMakeFiles/PoseEstimation.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
make: *** [Makefile:141: all] Error 2
