[  0%] Built target std_msgs_generate_messages_py
[  0%] Built target std_msgs_generate_messages_cpp
[  0%] Built target std_msgs_generate_messages_nodejs
[  0%] Built target std_msgs_generate_messages_eus
[  0%] Built target std_msgs_generate_messages_lisp
[  8%] [32mBuilding CXX object CMakeFiles/PoseEstimation.dir/src/lio/PoseEstimation.cpp.o[0m
[ 16%] [32mBuilding CXX object CMakeFiles/PoseEstimation.dir/src/lio/Estimator.cpp.o[0m
[ 25%] [32mBuilding CXX object CMakeFiles/PoseEstimation.dir/src/lio/ceresfunc.cpp.o[0m
[ 33%] [32mBuilding CXX object CMakeFiles/ScanRegistration.dir/src/lio/ScanRegistration.cpp.o[0m
[ 41%] Built target lio_livox_generate_messages_eus
[ 41%] Built target lio_livox_generate_messages_py
[ 41%] Built target lio_livox_generate_messages_cpp
[ 41%] Built target lio_livox_generate_messages_nodejs
[ 50%] [32mBuilding CXX object CMakeFiles/ScanRegistration.dir/src/lio/LidarFeatureExtractor.cpp.o[0m
[ 58%] [32mBuilding CXX object CMakeFiles/ScanRegistration.dir/src/segment/segment.cpp.o[0m
[ 66%] [32mBuilding CXX object CMakeFiles/ScanRegistration.dir/src/segment/pointsCorrect.cpp.o[0m
[ 66%] Built target lio_livox_generate_messages_lisp
[ 66%] Built target lio_livox_generate_messages
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/segment/segment.cpp:[m[K In member function â€˜[01m[Kint PCSeg::EncodeFeatures(float*)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/segment/segment.cpp:281:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
  281 | [01;35m[K}[m[K
      | [01;35m[K^[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:[m[K In member function â€˜[01m[Kvoid LidarFeatureExtractor::detectFeaturePoint(pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, std::vector<int>&, std::vector<int>&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:119:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  119 |     if (!pcl_isfinite(point.x[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:119:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  119 |     if (!pcl_isfinite(point.x[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:120:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  120 |         !pcl_isfinite(point.y[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:120:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  120 |         !pcl_isfinite(point.y[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:121:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  121 |         !pcl_isfinite(point.z[01;35m[K)[m[K) {
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:121:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  121 |         !pcl_isfinite(point.z[01;35m[K)[m[K) {
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:[m[K In member function â€˜[01m[Kvoid LidarFeatureExtractor::FeatureExtract_with_segment(const CustomMsgConstPtr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, sensor_msgs::PointCloud2&, int)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:624:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  624 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:624:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  624 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:625:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  625 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:625:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  625 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:626:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  626 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:626:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  626 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:[m[K In member function â€˜[01m[Kvoid LidarFeatureExtractor::FeatureExtract_with_segment_hap(const CustomMsgConstPtr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, sensor_msgs::PointCloud2&, int)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:738:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  738 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:738:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  738 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:739:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  739 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:739:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  739 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:740:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  740 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:740:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  740 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:[m[K In member function â€˜[01m[Kvoid LidarFeatureExtractor::detectFeaturePoint3(pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, std::vector<int>&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:965:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  965 |     if (!pcl_isfinite(point.x[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:965:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  965 |     if (!pcl_isfinite(point.x[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:966:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  966 |         !pcl_isfinite(point.y[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:966:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  966 |         !pcl_isfinite(point.y[01;35m[K)[m[K ||
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:967:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  967 |         !pcl_isfinite(point.z[01;35m[K)[m[K) {
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:967:30:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
  967 |         !pcl_isfinite(point.z[01;35m[K)[m[K) {
      |                              [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:[m[K In member function â€˜[01m[Kvoid LidarFeatureExtractor::FeatureExtract_hap(const CustomMsgConstPtr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, pcl::PointCloud<pcl::PointXYZINormal>::Ptr&, int)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1290:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1290 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1290:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1290 |     if (!pcl_isfinite(p.x[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1291:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1291 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1291:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1291 |         !pcl_isfinite(p.y[01;35m[K)[m[K ||
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1292:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1292 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1292:26:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kbool pcl_isfinite(T&&) [with T = const float&][m[Kâ€™ is deprecated: use std::isfinite instead of pcl_isfinite [[01;35m[K-Wdeprecated-declarations[m[K]
 1292 |         !pcl_isfinite(p.z[01;35m[K)[m[K) {
      |                          [01;35m[K^[m[K
In file included from [01m[K/usr/include/pcl-1.10/pcl/PCLPointField.h:10[m[K,
                 from [01m[K/usr/include/pcl-1.10/pcl/conversions.h:46[m[K,
                 from [01m[K/opt/ros/noetic/include/pcl_conversions/pcl_conversions.h:44[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/LidarFeatureExtractor/LidarFeatureExtractor.h:6[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/LidarFeatureExtractor.cpp:1[m[K:
[01m[K/usr/include/pcl-1.10/pcl/pcl_macros.h:142:6:[m[K [01;36m[Knote: [m[Kdeclared here
  142 | bool [01;36m[Kpcl_isfinite[m[K (T&& x) { return std::isfinite (std::forward<T> (x)); }
      |      [01;36m[K^~~~~~~~~~~~[m[K
In file included from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/Estimator.cpp:1[m[K:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:[m[K In member function â€˜[01m[Kdouble Estimator::FeatureLine::ComputeError(const Matrix4d&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:74:3:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
   74 |   [01;35m[K}[m[K
      |   [01;35m[K^[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:[m[K In member function â€˜[01m[Kdouble Estimator::FeaturePlan::ComputeError(const Matrix4d&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:94:3:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
   94 |   [01;35m[K}[m[K
      |   [01;35m[K^[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:[m[K In member function â€˜[01m[Kdouble Estimator::FeaturePlanVec::ComputeError(const Matrix4d&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:112:3:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
  112 |   [01;35m[K}[m[K
      |   [01;35m[K^[m[K
In file included from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/PoseEstimation.cpp:1[m[K:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:[m[K In member function â€˜[01m[Kdouble Estimator::FeatureLine::ComputeError(const Matrix4d&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:74:3:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
   74 |   [01;35m[K}[m[K
      |   [01;35m[K^[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:[m[K In member function â€˜[01m[Kdouble Estimator::FeaturePlan::ComputeError(const Matrix4d&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:94:3:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
   94 |   [01;35m[K}[m[K
      |   [01;35m[K^[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:[m[K In member function â€˜[01m[Kdouble Estimator::FeaturePlanVec::ComputeError(const Matrix4d&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:112:3:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
  112 |   [01;35m[K}[m[K
      |   [01;35m[K^[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/PoseEstimation.cpp:[m[K In function â€˜[01m[Kbool TryMAPInitialization()[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/PoseEstimation.cpp:190:33:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[KLocalParameterization[m[Kâ€™ is deprecated: LocalParameterizations will be removed from the Ceres Solver API in version 2.2.0. Use Manifolds instead. [[01;35m[K-Wdeprecated-declarations[m[K]
  190 |   ceres::LocalParameterization *[01;35m[KquatParam[m[K = new ceres::QuaternionParameterization();
      |                                 [01;35m[K^~~~~~~~~[m[K
In file included from [01m[K/usr/local/include/ceres/autodiff_local_parameterization.h:39[m[K,
                 from [01m[K/usr/local/include/ceres/ceres.h:39[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/utils/ceresfunc.h:3[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:20[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/PoseEstimation.cpp:1[m[K:
[01m[K/usr/local/include/ceres/local_parameterization.h:121:18:[m[K [01;36m[Knote: [m[Kdeclared here
  121 |     CERES_EXPORT [01;36m[KLocalParameterization[m[K {
      |                  [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/PoseEstimation.cpp:190:56:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[KQuaternionParameterization[m[Kâ€™ is deprecated: Use QuaternionManifold instead. [[01;35m[K-Wdeprecated-declarations[m[K]
  190 |   ceres::LocalParameterization *quatParam = new ceres::[01;35m[KQuaternionParameterization[m[K();
      |                                                        [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/local/include/ceres/autodiff_local_parameterization.h:39[m[K,
                 from [01m[K/usr/local/include/ceres/ceres.h:39[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/utils/ceresfunc.h:3[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:20[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/PoseEstimation.cpp:1[m[K:
[01m[K/usr/local/include/ceres/local_parameterization.h:211:18:[m[K [01;36m[Knote: [m[Kdeclared here
  211 |     CERES_EXPORT [01;36m[KQuaternionParameterization[m[K : public LocalParameterization {
      |                  [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/PoseEstimation.cpp:193:57:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid ceres::Problem::AddParameterBlock(double*, int, ceres::LocalParameterization*)[m[Kâ€™ is deprecated: LocalParameterizations are deprecated. Use the version with Manifolds instead. [[01;35m[K-Wdeprecated-declarations[m[K]
  193 |   problem_quat.AddParameterBlock(para_quat, 4, quatParam[01;35m[K)[m[K;
      |                                                         [01;35m[K^[m[K
In file included from [01m[K/usr/local/include/ceres/ceres.h:66[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/utils/ceresfunc.h:3[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/include/Estimator/Estimator.h:20[m[K,
                 from [01m[K/home/bubblebear/ws_livox/src/LIO-Livox/src/lio/PoseEstimation.cpp:1[m[K:
[01m[K/usr/local/include/ceres/problem.h:302:8:[m[K [01;36m[Knote: [m[Kdeclared here
  302 |   void [01;36m[KAddParameterBlock[m[K(double* values,
      |        [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[ 75%] [32m[1mLinking CXX executable /home/bubblebear/ws_livox/devel/.private/lio_livox/lib/lio_livox/ScanRegistration[0m
[ 75%] Built target ScanRegistration
[ 83%] [32m[1mLinking CXX executable /home/bubblebear/ws_livox/devel/.private/lio_livox/lib/lio_livox/PoseEstimation[0m
[100%] Built target PoseEstimation
