[01m[K/home/bubblebear/ws_livox/src/livox_camera_lidar_calibration/src/corner_photo.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/livox_camera_lidar_calibration/src/corner_photo.cpp:143:14:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[KwinSize[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  143 |     cv::Size [01;35m[KwinSize[m[K = cv::Size(5, 5);
      |              [01;35m[K^~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/livox_camera_lidar_calibration/src/corner_photo.cpp:144:13:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kzerozone[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  144 |    cv::Size [01;35m[Kzerozone[m[K = cv::Size(-1, -1);
      |             [01;35m[K^~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/livox_camera_lidar_calibration/src/corner_photo.cpp:145:22:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kcriteria[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  145 |     cv::TermCriteria [01;35m[Kcriteria[m[K = cv::TermCriteria(cv::TermCriteria::EPS + cv::TermCriteria::MAX_ITER, 40, 0.001);
      |                      [01;35m[K^~~~~~~~[m[K
[01m[K/home/bubblebear/ws_livox/src/livox_camera_lidar_calibration/src/projectCloud.cpp:[m[K In function â€˜[01m[Kvoid loadPointcloudFromROSBag(const string&)[m[Kâ€™:
[01m[K/home/bubblebear/ws_livox/src/livox_camera_lidar_calibration/src/projectCloud.cpp:40:35:[m[K [01;35m[Kwarning: [m[Kcatching polymorphic type â€˜[01m[Kclass rosbag::BagException[m[Kâ€™ by value [[01;35m[K-Wcatch-value=[m[K]
   40 |     } catch (rosbag::BagException [01;35m[Ke[m[K) {
      |                                   [01;35m[K^[m[K
[01m[K/home/bubblebear/ws_livox/src/livox_camera_lidar_calibration/src/projectCloud.cpp:52:32:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kstd::vector<livox_ros_driver::CustomMsg_<std::allocator<void> > >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   52 |         if ([01;35m[Klidar_datas.size() > (threshold_lidar/24000 + 1)[m[K) {
      |             [01;35m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
